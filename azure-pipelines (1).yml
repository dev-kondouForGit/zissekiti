parameters:
  - name: signingFileName
    type: string

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
- group: 'CodeSignGroupNES'
- name: 'solution'
  value: '**/*.sln'
- name: 'buildPlatform'
  value: 'Any CPU'
- name: 'buildConfiguration'
  value: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  inputs:
   command: 'custom'
   custom: 'tool'
   arguments: 'install --global azuresigntool'
  displayName: "Azure SignToolのインストール"

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- pwsh: |
    $fileSearchResult = Get-ChildItem -Name -Recurse -File -Include *${{parameters.signingFileName}}*
    $signfilesStr = $fileSearchResult -join ";"
    Write-Host "##vso[task.setvariable variable=signFiles;]$signfilesStr"
  displayName: "署名対象の検索"

- task: CmdLine@2
  displayName: 'コード署名処理'
  inputs:
    script: |
      for %%a in ($(signFiles)) do (
        AzureSignTool sign -du "https://example.com/" -kvt "$(TenantID)" -kvu "$(KeyContainerURI)" -kvi "$(AppID)" -kvs "$(Secret)" -kvc "" -v "$(Pipeline.Workspace)\s\%%a"
      )

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)\s'
    artifact: 'drop'
    publishLocation: 'pipeline'
  displayName: "署名ファイルの発行"